---
import ProjectCard from "@/components/molecules/cards/ProjectCard.astro";
import Layout from "@/layouts/Layout.astro";
import { Icon } from "astro-icon/components";
import { featuredWork } from "@/lib/consts";
---

<section class="bg-base-200 overflow-hidden grid gap-12 section overflow-x-hidden" id="projects">
  <Layout class="grid gap-12">
    <div class="grid md:grid-cols-2 gap-10">
      <h5 data-project-subtitle class="text-2xl font-semibold uppercase">Trabajo destacado</h5>
      <a href="/projects" data-project-button class="btn hidden md:flex w-fit justify-self-end btn-primary"
        >Mira todo mi trabajo</a
      >
    </div>
  </Layout>

  <div data-project-list class="embla px-4 rounded-2xl lg:px-0 grid gap-10">
    <div class="embla__viewport rounded-3xl">
      <div class="embla__container">
        {
          featuredWork &&
            featuredWork.map((project) => (
              <div class="embla__slide">
                <div class="embla__slide__number">
                  <ProjectCard data={project} />
                </div>
              </div>
            ))
        }
      </div>
    </div>
    <div class="grid mx-auto w-fit gap-5 grid-cols-2">
      <button aria-label="Siguiente" class="btn btn-square btn-outline embla__button--prev" type="button" disabled="">
        <Icon name="prev" />
      </button>
      <button aria-label="Anterior" class="btn btn-square btn-outline embla__button--next" type="button" disabled="">
        <Icon name="next" />
      </button>
    </div>
  </div>
  <a data-mobile-button href="/projects" class="btn md:hidden w-fit mx-auto btn-primary">Mira todo mi trabajo</a>
</section>

<script>
  import EmblaCarousel from "embla-carousel";
  import { setupTweenScale } from "@/assets/scripts/EmblaCarouselTweenScale";
  import { addPrevNextBtnsClickHandlers } from "@/assets/scripts/EmblaCarouselArrowButtons";

  document.addEventListener("astro:page-load", () => {
    const OPTIONS = { loop: true, startIndex: 0 };

    const emblaNode = document.querySelector(".embla");

    if (emblaNode) {
      const viewportNode = emblaNode.querySelector(".embla__viewport");

      if (!(viewportNode instanceof HTMLElement)) {
        throw new Error("Expected an HTMLElement");
      }

      const prevBtn = emblaNode.querySelector(".embla__button--prev");
      const nextBtn = emblaNode.querySelector(".embla__button--next");

      if (viewportNode) {
        const emblaApi = EmblaCarousel(viewportNode, OPTIONS);

        const removeTweenScale = setupTweenScale(emblaApi);

        const removePrevNextBtnsClickHandlers = addPrevNextBtnsClickHandlers(emblaApi, prevBtn, nextBtn);

        emblaApi.on("destroy", removeTweenScale).on("destroy", removePrevNextBtnsClickHandlers);
      }
    }
  });
</script>

<script>
  import { fadeUpOnce, fromLeft, fromRight } from "@/lib/animations";

  document.addEventListener("astro:page-load", () => {
    fromLeft("[data-project-subtitle]");
    fromRight("[data-project-button]");
    fadeUpOnce("[data-project-list]");
    fadeUpOnce("[data-mobile-button]");
  });
</script>

<style lang="scss">
  .embla {
    max-width: 100%;
    margin: auto;
    --slide-height: auto;
    --slide-spacing: 1rem;
  }
  .embla__viewport {
    overflow: hidden;
  }
  .embla__container {
    display: flex;
    touch-action: pan-y pinch-zoom;
    margin-left: calc(var(--slide-spacing) * -1);
  }
  .embla__slide {
    @apply flex-[0_0_100%];
    transform: translate3d(0, 0, 0);
    min-width: 0;
    padding-left: var(--slide-spacing);

    @screen lg {
      @apply flex-[0_0_45%];
    }

    @screen xl {
      @apply flex-[0_0_35%];
    }
  }
  .embla__slide__number {
    box-shadow: inset 0 0 0 0.2rem var(--detail-medium-contrast);
    border-radius: 1.8rem;
    font-weight: 600;
    display: flex;
    align-items: center;
    justify-content: center;
    height: var(--slide-height);
    user-select: none;
  }
  .embla__controls {
    display: grid;
    grid-template-columns: 1fr;
    justify-content: center;
    gap: 1.2rem;
    margin-top: 1.8rem;
  }

  .embla__button:disabled {
    color: var(--detail-high-contrast);
  }
</style>
